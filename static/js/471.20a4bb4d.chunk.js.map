{"version":3,"file":"static/js/471.20a4bb4d.chunk.js","mappings":"wLACA,MAAgC,8B,kBCkBhC,EAhBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAQ,EACRC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,SAAS,KAIhB,C,0HChBD,GAAgB,YAAc,6BAA6B,YAAc,6BAA6B,OAAS,wBAAwB,QAAU,0B,SCoEjJ,EA7DgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACHN,IAGLK,GAAa,IAEbE,EAAAA,EAAAA,IAAkBP,GACfQ,KAAKT,GACLU,MAAMC,OACNC,QAAQN,GAAa,IACzB,GAAE,CAACL,KAGF,2BACGI,IAAa,SAAC,UAAD,IACbN,IACC,4BACE,mBACEc,KAAK,SACLC,QAAS,kBAAMX,GAAU,EAAhB,EACTd,UAAWC,EAAAA,OAHb,wBAQA,eAAID,UAAWC,EAAAA,YAAf,SACGS,GAAWA,EAAQgB,OAAnB,OACChB,QADD,IACCA,OADD,EACCA,EAASiB,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAI7B,UAAWC,EAAAA,YAAf,WACE,gBAAID,UAAWC,EAAAA,aAAf,qBAA0C2B,MAC1C,cAAG5B,UAAWC,EAAAA,eAAd,SAAmC4B,MAFAjB,EAD1B,KAOb,cAAGZ,UAAWC,EAAAA,QAAd,8DASb,C,mMCvDK6B,EAAU,mCACVC,EAAU,+BAGHC,EAAa,mCAAG,6GAEFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACkBD,IAHhB,cAEnBI,EAFmB,yBAKlBA,EAASC,KAAKC,SALI,gCAOzBC,QAAQC,IAAR,MAPyB,yDAAH,qDAYbC,EAAc,mCAAG,WAAM3B,GAAN,gGAEHqB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDnB,EADC,oBACakB,EADb,oBAFG,cAEpBI,EAFoB,yBAMnBA,EAASC,MANU,gCAQ1BE,QAAQC,IAAR,MAR0B,yDAAH,sDAadE,EAAc,mCAAG,WAAM5B,GAAN,gGAEHqB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDnB,EADC,4BACqBkB,EADrB,oBAFG,cAEpBI,EAFoB,yBAKnBA,EAASC,KAAKM,MALK,gCAO1BJ,QAAQC,IAAR,MAP0B,yDAAH,sDAYdnB,EAAiB,mCAAG,WAAMP,GAAN,gGAENqB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDnB,EADC,4BACqBkB,EADrB,6BAFM,cAEvBI,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAYjBI,EAAU,mCAAG,WAAMC,GAAN,gGAECV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACcD,EADd,kBAC+Ba,EAD/B,oBAFD,cAEhBT,EAFgB,yBAKfA,EAASC,KAAKC,SALC,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/loader/loader.module.css?525a","components/loader/loader.jsx","webpack://react-homework-template/./src/components/reviews/reviews.module.css?dfbc","components/reviews/reviews.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapperLoader\":\"loader_wrapperLoader__N6YAr\"};","import css from './loader.module.css';\nimport { Puff } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.wrapperLoader}>\n      <Puff\n        height=\"80\"\n        width=\"80\"\n        radius={1}\n        color=\"#ad00b5\"\n        ariaLabel=\"puff-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"reviews_reviewsList__LkXr4\",\"reviewsItem\":\"reviews_reviewsItem__20WDg\",\"button\":\"reviews_button__8CEI-\",\"message\":\"reviews_message__bIlN6\"};","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { findMoviesReviews } from '../../shared/api';\n\nimport Loader from '../../components/loader/loader';\nimport css from './reviews.module.css';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    setIsLoading(true);\n\n    findMoviesReviews(id)\n      .then(setReviews)\n      .catch(Error)\n      .finally(setIsLoading(false));\n  }, [id]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => navigate(-1)}\n            className={css.button}\n          >\n            Step back\n          </button>\n\n          <ul className={css.reviewsList}>\n            {reviews && reviews.length ? (\n              reviews?.map(({ id, author, content }) => (\n                <li className={css.reviewsItem} key={id}>\n                  <h3 className={css.reviewsTitle}>Author: {author}</h3>\n                  <p className={css.reviewsContent}>{content}</p>\n                </li>\n              ))\n            ) : (\n              <p className={css.message}>\n                We don't have any reviews for this movie.\n              </p>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'c3e139e00d2caf000514e4525cc32cbe';\nconst baseURL = 'https://api.themoviedb.org/3';\n\n//Тренди///\nexport const findAllMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n///Пошук детальної інфо///\nexport const findMoviesbyID = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n///Акторський склад////\nexport const findMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n////Ревю////\nexport const findMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/movie/${id}/reviews?api_key=${API_KEY}&page=1&language='en-US'`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n////////Пошук////////////\nexport const searchFilm = async query => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["className","css","height","width","radius","color","ariaLabel","wrapperStyle","visible","useState","reviews","setReviews","id","useParams","navigate","useNavigate","isLoading","setIsLoading","useEffect","findMoviesReviews","then","catch","Error","finally","type","onClick","length","map","author","content","API_KEY","baseURL","findAllMovies","axios","response","data","results","console","log","findMoviesbyID","findMoviesCast","cast","searchFilm","query"],"sourceRoot":""}