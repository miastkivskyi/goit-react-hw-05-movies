{"version":3,"file":"static/js/502.272a0bda.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/loader/loader.module.css?525a","components/loader/loader.jsx","webpack://react-homework-template/./src/components/singleMovie/singleMovie.module.css?c0a9","webpack://react-homework-template/./src/components/infoFilm/infoFilm.module.css?5e14","components/infoFilm/infoFilm.jsx","components/singleMovie/singleMovie.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapperLoader\":\"loader_wrapperLoader__N6YAr\"};","import css from './loader.module.css';\nimport { Puff } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.wrapperLoader}>\n      <Puff\n        height=\"80\"\n        width=\"80\"\n        radius={1}\n        color=\"#ad00b5\"\n        ariaLabel=\"puff-loading\"\n        wrapperStyle={{}}\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"backText\":\"singleMovie_backText__tp+Wa\",\"backLink\":\"singleMovie_backLink__bttGH\",\"InfoWrapper\":\"singleMovie_InfoWrapper__X2lue\",\"InfoList\":\"singleMovie_InfoList__eiLf4\",\"InfoItem\":\"singleMovie_InfoItem__QJsi+\",\"active\":\"singleMovie_active__09zPF\",\"inActive\":\"singleMovie_inActive__fOdVh\"};","// extracted by mini-css-extract-plugin\nexport default {\"detailsWrapper\":\"infoFilm_detailsWrapper__F6evq\",\"detailsInnerWrapper\":\"infoFilm_detailsInnerWrapper__9elLo\",\"detailsWrapperImg\":\"infoFilm_detailsWrapperImg__A2Xxr\",\"detailsImg\":\"infoFilm_detailsImg__OEtxD\",\"detailsWrapperInfo\":\"infoFilm_detailsWrapperInfo__LS6ra\",\"detailsTitle\":\"infoFilm_detailsTitle__0omFv\",\"detailsSpan\":\"infoFilm_detailsSpan__07DKh\",\"detailsText\":\"infoFilm_detailsText__xWMea\"};","import PropTypes from 'prop-types';\nimport notFoundImage from '../../images/images.png';\n\nimport css from './infoFilm.module.css';\n\nconst InfoFilm = ({\n  movie: {\n    title,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n    budget,\n    runtime,\n  },\n}) => {\n  function moviesImg(poster_path) {\n    if (poster_path == null) {\n      return notFoundImage;\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  }\n\n  return (\n    <div className={css.detailsWrapper}>\n      <div className={css.detailsInnerWrapper}>\n        <div className={css.detailsWrapperImg}>\n          <img\n            className={css.detailsImg}\n            src={moviesImg(poster_path)}\n            alt={title}\n            width=\"300\"\n          />\n        </div>\n        <div className={css.detailsWrapperInfo}>\n          <h1 className={css.detailsTitle}>\n            {title}\n            <span className={css.detailsSpan}>\n              ({`${release_date?.slice(0, 4)}`})\n            </span>\n          </h1>\n          <p className={css.detailsText}>\n            <b> User score:</b>{' '}\n            {Math.round(Number(vote_average) * 10).toFixed(0)}%\n          </p>\n\n          <p className={css.detailsText}>\n            <b>Genres:</b> {genres?.map(genre => genre.name).join(', ')}\n          </p>\n          <p className={css.detailsText}>\n            <b>Runtime: </b> {runtime} minutes\n          </p>\n          {budget > 0 && (\n            <p className={css.detailsText}>\n              <b>Budget: </b> {budget}$\n            </p>\n          )}\n          <p className={css.detailsText}>\n            <b>Overview:</b> {overview}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInfoFilm.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default InfoFilm;\n","import style from './singleMovie.module.css';\nimport { useEffect, useState, Suspense } from 'react';\nimport {\n  useParams,\n  Outlet,\n  NavLink,\n  Link,\n  useLocation,\n} from 'react-router-dom';\n\nimport Loader from '../../components/loader/loader';\nimport { findMoviesbyID } from '../../shared/api';\nimport InfoFilm from '../infoFilm/infoFilm';\nimport PropTypes from 'prop-types';\n\nconst MoviesDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const back = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    findMoviesbyID(Number(id))\n      .then(setMovie)\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  if (!id) {\n    return;\n  }\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <Link to={back} state={{ from: location }} className={style.backLink}>\n        <p className={style.backText}>Go back</p>\n      </Link>\n\n      {movie && <InfoFilm movie={movie} />}\n      <div className={style.InfoWrapper}>\n        <ul className={style.InfoList}>\n          <li className={style.InfoItem}>\n            <NavLink\n              to=\"cast\"\n              state={{ from: back }}\n              className={({ isActive }) =>\n                isActive ? `${style.active}` : `${style.inActive}`\n              }\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className={style.InfoItem}>\n            <NavLink\n              to=\"reviews\"\n              state={{ from: back }}\n              className={({ isActive }) =>\n                isActive ? `${style.active}` : `${style.inActive}`\n              }\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<p>Please Wait</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nMoviesDetails.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c3e139e00d2caf000514e4525cc32cbe';\nconst baseURL = 'https://api.themoviedb.org/3';\n\n//Тренди///\nexport const findAllMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n///Пошук детальної інфо///\nexport const findMoviesbyID = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n///Акторський склад////\nexport const findMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n////Ревю////\nexport const findMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/movie/${id}/reviews?api_key=${API_KEY}&page=1&language='en-US'`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n////////Пошук////////////\nexport const searchFilm = async query => {\n  try {\n    const response = await axios.get(\n      `${baseURL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["className","css","height","width","radius","color","ariaLabel","wrapperStyle","visible","movie","title","poster_path","vote_average","overview","genres","release_date","budget","runtime","src","notFoundImage","moviesImg","alt","slice","Math","round","Number","toFixed","map","genre","name","join","useState","isLoading","setIsLoading","setMovie","id","useParams","location","useLocation","back","state","from","useEffect","findMoviesbyID","then","catch","error","console","log","finally","to","style","isActive","Suspense","fallback","API_KEY","baseURL","findAllMovies","axios","response","data","results","findMoviesCast","cast","findMoviesReviews","searchFilm","query"],"sourceRoot":""}